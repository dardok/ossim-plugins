{
   "Notes_to_Developer": "Deprecated or superceded parameters can be flagged so that the user is notified on the console by starting its description here with the word `DEPRECATED` (in caps).",
   
   "parameters": 
   [
      {
         "name": "algorithm",
         "descr": "Algorithm used for generating tiepoints. This can also be specified one level up in the JSON.",
         "type": "string",
         "value": "crosscorr",
         "allowedValues": ["crosscorr", "descriptor"]
      },
      {
         "label": "Max. Residual Diff. Ratio",
         "name": "maxResMagDiffRatio",
         "descr": "Used in match-point neighbor consistency check. Represents the maximum ratio (0-1) difference tolerated in residual magnitudes before flagging false match.",
         "type": "float",
         "value": 0.1
      },
      {
         "label": "Min. Vector Residual Diff.",
         "name": "minVectorResDiff",
         "descr": "Used in match-point neighbor consistency check. Represents the minimum vector difference between residuals below which they are considered consistent. Used for accepting small but directionally varying neighbor residuals..",
         "type": "float",
         "value": 3.0
      },
      {
         "label": "Max. Residual Angle Diff.",
         "name": "maxResAngleDiff",
         "descr": "Used in match-point neighbor consistency check. Represents the maximum angle difference (degrees) tolerated between residual azimuths before flagging false match.",
         "type": "float",
         "value": 10.0
      },
      {
         "label": "% Consistent Threshold",
         "name": "percentConsistentThreshold",
         "descr": "Used in match-point neighbor consistency check. Represents the minimum required percentage (0-100) of the neighbor set that must be deemed consistent before accepting the match.",
         "type": "uint",
         "value": 50
      },
      {
         "label": "Consider Parallax",
         "name": "considerParallax",
         "descr": "If true, directs the consistency check to consider displacements due to parallax as acceptable.",
         "type": "bool",
         "value": false
      },
      {
         "label": "Parallax-adjusted Residual Deviation Threshold.",
         "name": "maxResParallaxDev",
         "descr": "Used in match-point neighbor consistency check. Represents the maximum distance of the residual from the locus of neighbors along the parallax direction. Expressed as factor of standard deviation.",
         "type": "float",
         "value": 1.0
      },
      {
         "label": "Parallax-adjusted Residual Pixel Threshold.",
         "name": "maxResParallaxPix",
         "descr": "Used in match-point neighbor consistency check. Represents the maximum distance (in view-space pixels) of the residual from the locus of neighbors along the parallax direction.",
         "type": "uint",
         "value": 2
      },
      {
         "label": "Min. Number of Consistent Neighbors",
         "name": "minNumConsistentNeighbors",
         "descr": "Used in match-point neighbor consistency check. Represents the minimum number of consistent neighbors needed to accept a match.",
         "type": "uint",
         "value": 1
      },
      {
         "label": "Number of Tie-points per Tile",
         "name": "numTiePointsPerTile",
         "descr": "Caps the number of tie-points, after filtering, to generate per tile.",
         "type": "uint",
         "value": 2
      },
      {
         "label": "Number of Features Per Tile",
         "name": "numFeaturesPerTile",
         "descr": "Defines the number of features to identify in the search patch.",
         "type": "uint",
         "value": 10
      },
      {
         "label": "Do Two-way Feature Search",
         "name": "doTwoWaySearch",
         "descr": "If true, features are identified on both images of a pair. Otherwise, features are searched on the first image of the pair.",
         "type": "bool",
         "value": false
      },
      {
         "label": "Feature Search Tile Size",
         "name": "featureSearchTileSize",
         "descr": "Side size o square tile in pixels for searching features.",
         "type": "uint",
         "value": 1024
      },
      {
         "label": "Feature Search Tile Margin",
         "name": "featureSearchTileMargin",
         "descr": "Margin (in pixels) to add to the feature search tile specification to account for descriptor sampling size. Only meaningful when searchGridSize=0 (contiguous tiles).",
         "type": "uint",
         "value": 48
      },
      {
         "label": "Search Grid Size",
         "name": "searchGridSize",
         "descr": "The number of search tiles to layout along widest dimension of overlap. Set to 0 for contiguous tiles.",
         "type": "uint",
         "value": 7
      },
      {
         "label": "Correlation Window Size",
         "name": "corrWindowSize",
         "descr": "Side size of the correlation kernel to use in computing cross-correlation.",
         "type": "uint",
         "value": 15
      },
      {
         "name": "diagnosticLevel",
         "descr": "For engineering output. For minimum verbosity, use 0",
         "type": "uint",
         "value": 1
      },
      {
         "label": "Max Number of Matches per Feature.",
         "name": "maxNumMatchesPerFeature",
         "descr": "Max number of matches to consider per keypoint/feature.",
         "type": "uint",
         "value": 3
      },
      {
         "name": "annotatedImageSize",
         "descr": "For engineering use. Defines the maximum side size of the annotated image being generated (if diagnostic level is appropriate). Leave as 0 to match the REF input image size",
         "type": "int",
         "value": 0
      },
      {
         "name": "annotatedImageBaseName",
         "descr": "For engineering use. Specifies the base filename of the annotated images being generated (if diagnostic level is appropriate).",
         "type": "string",
         "value": "annotated"
      },
      {
         "name": "residualMultiplier",
         "descr": "For engineering use. Factor used to exagerate the magnitude of the residual vectors in the annotated image.",
         "type": "float",
         "value": 1.0
      },
      {
         "name": "filterChain",
         "descr": "Experimental. Specifies the image processing chain to apply after the image handler.",
         "type": "string",
         "value": "None"
      },
      {
         "name": "viewGSD",
         "descr": "Experimental. Specifies the view-space resolution in meters/pixel.",
         "type": "float",
         "value": 0.0
      }
   ]
}
      
